---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    pulumi_version: "v3.94.2"

  tasks:
    - name: Get My User
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install Base Packages
      ansible.builtin.dnf:
        name:
          - git
          - htop
          - vim
          - firefox
          - gh
          - gnome-tweaks
          - gcc
          - helm
          - go-task
          - ripgrep
          - poetry
          - zsh
          - fzf
          - tmux
          - zlib
          - zlib-devel
          - make
          - patch
          - bzip2
          - bzip2-devel
          - readline-devel
          - sqlite
          - sqlite-devel
          - openssl-devel
          - tk-devel
          - libffi-devel
          - xz-devel
          - libuuid-devel
          - gdbm-libs
          - libnsl2
          - luarocks
          - wl-clipboard
          - fd-find
          - gcc-c++
          - doctl
          - helix
          - "@Development Tools"
          - "@C Development Tools and Libraries"
          - autoconf
          - ncurses-devel
          - wxGTK-devel
          - wxBase
          - java-1.8.0-openjdk-devel
          - libiodbc
          - unixODBC-devel.x86_64
          - erlang-odbc.x86_64
          - libxslt
          - fop
          - podman-compose
          - inotify-tools
          - dotnet-sdk-8.0
          - unar
          - python-is-python3
          - google-chrome
        state: present

    - name: Change Shell To Zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Install DNF Plugins Core
      ansible.builtin.dnf:
        name: dnf-plugins-core
        state: present

    - name: Import Microsoft GPG Key
      ansible.builtin.rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add Visual Studio Code Repo
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true
        enabled: true

    - name: Install VS Code
      ansible.builtin.dnf:
        name: code
        state: present

    - name: Install Azure CLI
      ansible.builtin.dnf:
        name: azure-cli
        state: present

    - name: Add Docker Repo
      ansible.builtin.yum_repository:
        name: docker
        description: Docker repo
        baseurl: "https://download.docker.com/linux/fedora/{{ ansible_distribution_major_version }}/{{ ansible_architecture }}/stable"
        gpgkey: "https://download.docker.com/linux/fedora/gpg"
        gpgcheck: true
        enabled: true

    - name: Install Docker
      ansible.builtin.dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Add Docker Group
      ansible.builtin.group:
        name: docker
        state: present

    - name: Add User to Docker Group
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        groups: docker
        append: true

    - name: Add Kubectl Repo
      ansible.builtin.yum_repository:
        name: Kubernetes
        description: Kubernetes repo
        baseurl: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
        gpgkey: https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
        gpgcheck: true
        enabled: true

    - name: Install Kubectl
      ansible.builtin.dnf:
        name: kubectl
        state: present

    - name: Install Kind
      ansible.builtin.get_url:
        url: "https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64"
        dest: "/usr/local/bin/kind"
        mode: "0755"

    - name: Add Hashicorp Repo
      ansible.builtin.yum_repository:
        name: hashicorp
        description: Hashicorp repo
        baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
        gpgkey: https://rpm.releases.hashicorp.com/gpg
        gpgcheck: true
        enabled: true

    - name: Install Terraform
      ansible.builtin.dnf:
        name: terraform
        state: present

    - name: Check if Pulumi is installed
      ansible.builtin.command:
        cmd: pulumi version
      register: pulumi_installed
      ignore_errors: true
      changed_when: false

    - name: Download Pulumi SDK
      ansible.builtin.get_url:
        url: "https://get.pulumi.com/releases/sdk/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        dest: "/tmp/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        mode: "0644"
      when: pulumi_installed is failed or pulumi_installed.stdout is not search(pulumi_version)

    - name: Extract Pulumi to /usr/local/bin
      ansible.builtin.unarchive:
        src: "/tmp/pulumi-{{ pulumi_version }}-linux-x64.tar.gz"
        dest: /usr/local/bin
        extra_opts: [--strip-components=1]
        creates: /usr/local/bin/pulumi
      when: pulumi_installed is failed or pulumi_installed.stdout is not search(pulumi_version)

    - name: Install Flatpak packages
      community.general.flatpak:
        name:
          - com.obsproject.Studio
          - org.videolan.VLC
          - org.tenacityaudio.Tenacity
          - md.obsidian.Obsidian
          - org.gimp.GIMP
          - rest.insomnia.Insomnia
          - org.gnome.meld
          - org.sqlitebrowser.sqlitebrowser
          - com.mattjakeman.ExtensionManager
          - org.gnome.Extensions
          - org.gnome.Platform
        state: present

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Jetbrains Mono exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.fonts/JetBrainsMonoNerd*FontMono*"
      register: jetbrains_mono_exists
      ignore_errors: true
      changed_when: false

    - name: Download Jetbrains mono
      when: jetbrains_mono_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
        dest: "~{{ remote_regular_user }}/.fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Install Basic VS Code Extensions
      shell: |
        code --install-extension 'TabNine.tabnine-vscode'
        code --install-extension 'tinkertrain.theme-panda'
        code --install-extension 'eamodio.gitlens'
        code --install-extension 'ms-azuretools.vscode-docker'
        code --install-extension 'redhat.ansible'
        code --install-extension 'redhat.vscode-yaml'
        code --install-extension 'rangav.vscode-thunder-client'
        code --install-extension 'svelte.svelte-vscode'
        code --install-extension 'qwtel.sqlite-viewer'
        code --install-extension 'alexcvzz.vscode-sqlite'
        code --install-extension 'ms-vscode.remote-explorer'
        code --install-extension 'ms-python.python'
        code --install-extension 'ms-python.vscode-pylance'
        code --install-extension 'Prisma.prisma'
        code --install-extension 'esbenp.prettier-vscode'
        code --install-extension 'ms-ossdata.vscode-postgresql'
        code --install-extension 'christian-kohler.path-intellisense'
        code --install-extension 'mongodb.mongodb-vscode'
        code --install-extension 'ritwickdey.LiveServer'
        code --install-extension 'ms-kubernetes-tools.vscode-kubernetes-tools'
        code --install-extension 'VisualStudioExptTeam.vscodeintellicode'
        code --install-extension 'hashicorp.terraform'
        code --install-extension 'golang.go'
        code --install-extension 'mhutchie.git-graph'
        code --install-extension 'GrapeCity.gc-excelviewer'
        code --install-extension 'dracula-theme.theme-dracula'
        code --install-extension 'ms-vscode-remote.remote-containers'
        code --install-extension 'ms-python.black-formatter'
        code --install-extension 'aaron-bond.better-comments'
        code --install-extension 'ms-azuretools.vscode-azureterraform'
        code --install-extension 'formulahendry.auto-close-tag'
        code --install-extension 'charliermarsh.ruff'
      args:
        executable: /bin/bash
